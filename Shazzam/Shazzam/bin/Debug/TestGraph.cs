//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shazzam.Shaders {
    using System.Windows;
    using System.Windows.Media;
    using System.Windows.Media.Effects;
    
    
    public class AutoGenShaderEffect : ShaderEffect {
        
        public static DependencyProperty InputProperty = ShaderEffect.RegisterPixelShaderSamplerProperty("Input", typeof(AutoGenShaderEffect), 0);
        
        public static DependencyProperty BloomintensityProperty = DependencyProperty.Register("Bloomintensity", typeof(double), typeof(AutoGenShaderEffect), new System.Windows.UIPropertyMetadata(new double(), PixelShaderConstantCallback(0)));
        
        public static DependencyProperty BaseintensityProperty = DependencyProperty.Register("Baseintensity", typeof(double), typeof(AutoGenShaderEffect), new System.Windows.UIPropertyMetadata(new double(), PixelShaderConstantCallback(1)));
        
        public static DependencyProperty BloomsaturationProperty = DependencyProperty.Register("Bloomsaturation", typeof(double), typeof(AutoGenShaderEffect), new System.Windows.UIPropertyMetadata(new double(), PixelShaderConstantCallback(2)));
        
        public static DependencyProperty BasesaturationProperty = DependencyProperty.Register("Basesaturation", typeof(double), typeof(AutoGenShaderEffect), new System.Windows.UIPropertyMetadata(new double(), PixelShaderConstantCallback(3)));
        
        public AutoGenShaderEffect(PixelShader shader) {
            // Note: for your project you must decide how to use the generated ShaderEffect class (Choose A or B below).
            // A: Comment out the following line if you are not passing in the shader and remove the shader parameter from the constructor

            PixelShader = shader;

            // B: Uncomment the following two lines - which load the *.ps file
            // Uri u = new Uri(@"pack://application:,,,/bandedswirl.ps");
            // PixelShader = new PixelShader() { UriSource = u };

            // Must initialize each DependencyProperty that's affliated with a shader register
            // Ensures the shader initializes to the proper default value.
            this.UpdateShaderValue(InputProperty);
            this.UpdateShaderValue(BloomintensityProperty);
            this.UpdateShaderValue(BaseintensityProperty);
            this.UpdateShaderValue(BloomsaturationProperty);
            this.UpdateShaderValue(BasesaturationProperty);
        }
        
        public virtual System.Windows.Media.Brush Input {
            get {
                return ((System.Windows.Media.Brush)(GetValue(InputProperty)));
            }
            set {
                SetValue(InputProperty, value);
            }
        }
        
        public virtual double Bloomintensity {
            get {
                return ((double)(GetValue(BloomintensityProperty)));
            }
            set {
                SetValue(BloomintensityProperty, value);
            }
        }
        
        public virtual double Baseintensity {
            get {
                return ((double)(GetValue(BaseintensityProperty)));
            }
            set {
                SetValue(BaseintensityProperty, value);
            }
        }
        
        public virtual double Bloomsaturation {
            get {
                return ((double)(GetValue(BloomsaturationProperty)));
            }
            set {
                SetValue(BloomsaturationProperty, value);
            }
        }
        
        public virtual double Basesaturation {
            get {
                return ((double)(GetValue(BasesaturationProperty)));
            }
            set {
                SetValue(BasesaturationProperty, value);
            }
        }
    }
}
